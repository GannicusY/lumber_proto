// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/Spec/SonpoolProp.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Lumber.Spec {

  /// <summary>Holder for reflection information generated from proto/Spec/SonpoolProp.proto</summary>
  public static partial class SonpoolPropReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/Spec/SonpoolProp.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SonpoolPropReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chxwcm90by9TcGVjL1NvbnBvb2xQcm9wLnByb3RvEgtsdW1iZXIuU3BlYyJT",
            "CgtTb25wb29sUHJvcBISCgpTb25wb29sX0lEGAEgASgFEg8KB1Byb3BfSUQY",
            "AiABKAUSEQoJUHJvcF9OYW1lGAMgASgFEgwKBFByb2IYBCABKAViBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Lumber.Spec.SonpoolProp), global::Lumber.Spec.SonpoolProp.Parser, new[]{ "SonpoolID", "PropID", "PropName", "Prob" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SonpoolProp : pb::IMessage<SonpoolProp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SonpoolProp> _parser = new pb::MessageParser<SonpoolProp>(() => new SonpoolProp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SonpoolProp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Lumber.Spec.SonpoolPropReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SonpoolProp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SonpoolProp(SonpoolProp other) : this() {
      sonpoolID_ = other.sonpoolID_;
      propID_ = other.propID_;
      propName_ = other.propName_;
      prob_ = other.prob_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SonpoolProp Clone() {
      return new SonpoolProp(this);
    }

    /// <summary>Field number for the "Sonpool_ID" field.</summary>
    public const int SonpoolIDFieldNumber = 1;
    private int sonpoolID_;
    /// <summary>
    /// 品质池ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SonpoolID {
      get { return sonpoolID_; }
      set {
        sonpoolID_ = value;
      }
    }

    /// <summary>Field number for the "Prop_ID" field.</summary>
    public const int PropIDFieldNumber = 2;
    private int propID_;
    /// <summary>
    /// 道具ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PropID {
      get { return propID_; }
      set {
        propID_ = value;
      }
    }

    /// <summary>Field number for the "Prop_Name" field.</summary>
    public const int PropNameFieldNumber = 3;
    private int propName_;
    /// <summary>
    /// 道具名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PropName {
      get { return propName_; }
      set {
        propName_ = value;
      }
    }

    /// <summary>Field number for the "Prob" field.</summary>
    public const int ProbFieldNumber = 4;
    private int prob_;
    /// <summary>
    /// 概率
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Prob {
      get { return prob_; }
      set {
        prob_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SonpoolProp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SonpoolProp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SonpoolID != other.SonpoolID) return false;
      if (PropID != other.PropID) return false;
      if (PropName != other.PropName) return false;
      if (Prob != other.Prob) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SonpoolID != 0) hash ^= SonpoolID.GetHashCode();
      if (PropID != 0) hash ^= PropID.GetHashCode();
      if (PropName != 0) hash ^= PropName.GetHashCode();
      if (Prob != 0) hash ^= Prob.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SonpoolID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SonpoolID);
      }
      if (PropID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PropID);
      }
      if (PropName != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PropName);
      }
      if (Prob != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Prob);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SonpoolID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SonpoolID);
      }
      if (PropID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PropID);
      }
      if (PropName != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PropName);
      }
      if (Prob != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Prob);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SonpoolID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SonpoolID);
      }
      if (PropID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropID);
      }
      if (PropName != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropName);
      }
      if (Prob != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Prob);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SonpoolProp other) {
      if (other == null) {
        return;
      }
      if (other.SonpoolID != 0) {
        SonpoolID = other.SonpoolID;
      }
      if (other.PropID != 0) {
        PropID = other.PropID;
      }
      if (other.PropName != 0) {
        PropName = other.PropName;
      }
      if (other.Prob != 0) {
        Prob = other.Prob;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SonpoolID = input.ReadInt32();
            break;
          }
          case 16: {
            PropID = input.ReadInt32();
            break;
          }
          case 24: {
            PropName = input.ReadInt32();
            break;
          }
          case 32: {
            Prob = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SonpoolID = input.ReadInt32();
            break;
          }
          case 16: {
            PropID = input.ReadInt32();
            break;
          }
          case 24: {
            PropName = input.ReadInt32();
            break;
          }
          case 32: {
            Prob = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
